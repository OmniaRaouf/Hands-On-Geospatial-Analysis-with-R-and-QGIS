library(sp)
library(rgdal)
library(maptools)
map = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Chapter 2/Data","indicator_point")
plot(map)
library(sp)
library(rgdal)
library(maptools)
map = readOGR("F:/Hands-on-Geospatial-Analysis-Using-R-and-QGIS/Chapter 02/Data","indicator")
plot(map)
map = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Chapter 2/Chapter 2_Data","indicator_point")
plot(map)
# SpatialPoints
library(sp)
library(rgdal)
library(maptools)
map = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data","indicator")
plot(map)
library(sp)
library(rgdal)
library(maptools)
map = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data","indicator")
plot(map)
bd_val = read.csv("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data/r_val.csv", stringsAsFactors = FALSE)
str(bd_val)
# Convert it into SpatialPointsDataframe
coordinates(bd_val) = c("lon", "lat")
str(bd_val)
plot(bd_val, col = "blue", pch = 19)
highway = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data","dhaka_highway_polylines")
plot(highway)
highway = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data","dhaka_gazipur")
plot(highway)
# SpatialLines
highway = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data","dhaka_highway_polylines")
plot(highway)
highway = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data","dhaka_gazipur")
plot(highway)
map_dhaka = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/","dhaka")
plot(map_dhaka)
map_dhaka = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data","dhaka")
plot(map_dhaka)
map_bd = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data","BGD_adm3_data_re")
head(map_bd@data)
str(map_bd@polygons, max.level = 2)
map_bd = spTransform(map_bd, CRS("+proj=longlat +datum=WGS84"))
class(map_bd)
plot(map_bd)
points(bd_val, pch=19, col="blue")
map_bd = spTransform(map_bd, CRS("+proj=longlat +datum=WGS84"))
class(map_bd)
library(GISTools)
choropleth(map_bd, map_bd$value4)
library(GISTools)
choropleth(map_bd, as.numeric(map_bd$value2))
library(RColorBrewer)
dhaka_div = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data","dhaka_div")
# check how many unique elements map_bd$NAME_3 has by writing unique(dhaka_div$NAME_3)
unique(dhaka_div$NAME_3)
# There are 7 unique districts and so pick 7 colors
colors = colorRampPalette(brewer.pal(12, "Set3"))(7)
dhaka_div$NAME_3 = as.factor(as.character(dhaka_div$NAME_3))
spplot(dhaka_div, "NAME_3", main = "Coloring different districts of Dhaka division", col.regions = colors, col = "white")
library(tmap)
map_bd = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter02/Data","BGD_adm3_data_re")
#head(map_bd@data)
str(map_bd@data)
map_bd$value1 = as.numeric(map_bd$value1)
qtm(shp = map_bd, fill = "value1")
tm_shape(map_bd) +
tm_borders() +
tm_fill(col="value1") +
tm_compass() + # This puts a compass on the bottom left of the map
tmap_style("cobalt")
tm_shape(map_bd) +
tm_bubbles(size = "value1", style = "quantile") +
tm_borders(col="orange3") # Add a colorful border
tm_shape(map_bd) +
tm_fill(col = "value1", style = "quantile") +
tm_borders() +
tm_text(text = "NAME_3", size = 0.5)
tm_shape(map_bd) +
tm_fill(col = "value1", style = "quantile", title = "Value of  quantitative indicator", palette = "Blues") +
tm_borders(col = "grey30", lwd = 0.6) +
tm_text(text = "NAME_3", size = 0.5) +
tm_credits("Source: Author", position = c("right", "top"))
map_bd = readOGR("F:\Hands-on Geospatial Analysis Using R and QGIS\Book Version_Me\9781788991674_Code\9781788991674_Code\Chapter04\Data","BGD_adm3_data_re")
#head(map_bd@data)
isGazipur = map_bd$NAME_3 == "Gazipur"
# This will select only those feature(s) whose value equals to "Gazipur"
gazipur = map_bd[isGazipur, ]
# Now, save it using writeOGR()
writeOGR(obj=gazipur, dsn="F:\Hands-on Geospatial Analysis Using R and QGIS\Book Version_Me\9781788991674_Code\9781788991674_Code\Chapter04\Data", layer="gazipur", driver="ESRI Shapefile")
# Now import gazipur.shp and plot it
gazipur = readOGR("F:\Hands-on Geospatial Analysis Using R and QGIS\Book Version_Me\9781788991674_Code\9781788991674_Code\Chapter04\Data","gazipur")
plot(gazipur, col = "blue")
map_bd = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter04/Data","BGD_adm3_data_re")
#head(map_bd@data)
isGazipur = map_bd$NAME_3 == "Gazipur"
# This will select only those feature(s) whose value equals to "Gazipur"
gazipur = map_bd[isGazipur, ]
writeOGR(obj=gazipur, dsn="F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter04/Data", layer="gazipur", driver="ESRI Shapefile")
# Now import gazipur.shp and plot it
gazipur = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter04/Data","gazipur")
plot(gazipur, col = "blue")
dhaka = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter04/Data","dhaka")
plot(dhaka)
dhaka = readOGR("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter04/Data","dhaka")
plot(dhaka)
dhaka_gazipur = raster::union(dhaka, gazipur)
str(dhaka_gazipur, max.level = 2)
plot(dhaka_gazipur, col = "blue")
dhaka_gazipur = raster::union(dhaka, gazipur)
str(dhaka_gazipur, max.level = 2)
plot(dhaka_gazipur, col = "blue")
points = read.csv("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter04/Data/arbitrary_indicator.csv")
coordinates(points) =  ~ lon + lat
summary(points)
plot(map_bd, col = "gray", border = "blue", main = "Map of Bangladesh with arbitrary points plotted")
plot(points, ad = TRUE, pch=19, cex=.4, col = "red")
proj4string(points) <- CRS(proj4string(dhaka))
points_dhaka <- points[dhaka, ]
# Now, plot this data on Dhaka map, we can see that points now have been clipped to Dhaka
plot(dhaka, col = "gray", border = "blue", main = "Points clipped to the map of Dhaka")
plot(points_dhaka, add = TRUE, pch=20, cex=1, col = "red")
# Difference
not_dhaka = gDifference(points, dhaka)
plot(map_bd, col = "gray", border = "blue", main = "All the points except Dhaka's are plotted")
plot(not_dhaka, add = TRUE, pch=20, cex=0.4, col = "red")
plot(dhaka, col = "gray", border = "blue", main = "gDifference() succesfully removed points inside Dhaka")
plot(not_dhaka, add = TRUE, pch=20, cex=0.4, col = "red")
x = " +proj=utm +zone=48 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0"
bd_utm = spTransform(map_bd, CRS(x))
bd_utm$area = gArea(bd_utm, byid = TRUE) / 1000^2
# We can now check that a new column data with area for each feature has bee created
head(bd_utm@data)
setwd("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter05/Data")
# Read metadata
meta_data = readMeta("Mosaic/LC08_L1TP_137043_20180410_20180417_01_T1/LC08_L1TP_137043_20180410_20180417_01_T1_MTL.txt")
summary(meta_data)
library(raster)
library(rgeos)
library(rgdal)
library(maptools)
library(sp)
library(RStoolbox)
setwd("F:/Hands-on Geospatial Analysis Using R and QGIS/Book Version_Me/9781788991674_Code/9781788991674_Code/Chapter05/Data")
# Read metadata
meta_data = readMeta("Mosaic/LC08_L1TP_137043_20180410_20180417_01_T1/LC08_L1TP_137043_20180410_20180417_01_T1_MTL.txt")
summary(meta_data)
meta_data = readMeta("Mosaic/LC08_L1TP_137043_20180410_20180417_01_T1/LC08_L1TP_137043_20180410_20180417_01_T1_MTL.txt")
summary(meta_data)
library(raster)
band4 = raster("Mosaic/LC08_L1TP_137043_20180410_20180417_01_T1/LC08_L1TP_137043_20180410_20180417_01_T1_B4.TIF")
band4
plot(band4)
band1 = raster("Mosaic/LC08_L1TP_137043_20180410_20180417_01_T1/LC08_L1TP_137043_20180410_20180417_01_T1_B1.TIF")
band2 = raster("Mosaic/LC08_L1TP_137043_20180410_20180417_01_T1/LC08_L1TP_137043_20180410_20180417_01_T1_B2.TIF")
band3 = raster("Mosaic/LC08_L1TP_137043_20180410_20180417_01_T1/LC08_L1TP_137043_20180410_20180417_01_T1_B3.TIF")
band5 = raster("Mosaic/LC08_L1TP_137043_20180410_20180417_01_T1/LC08_L1TP_137043_20180410_20180417_01_T1_B5.TIF")
stacked = stack(band1, band2, band3, band4, band5)
plot(stacked)
band4_ll = projectRaster(band4, crs = '+proj=longlat')
band4_ll
print(band4_ll)
x = " +proj=utm +zone=48 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0"
band4_utm = projectRaster(band4_ll, crs=x)
# False color composite
plotRGB(stacked, r = 3, g = 2, b = 1, stretch = "hist")
dem = raster("DEM/dem_chittagong.tif")
